version: 2.1
jobs:
    build_test:
        docker:
            - image: circleci/node:13.4
        steps:
            - checkout
            - run:
                name: install-dependencies
                command: npm install
            - run:
                name: Tests
                command: npm test
    deploy:
        parameters:
            env_name:
                type: string
        docker:
            - image: google/cloud-sdk
        steps:
            - checkout
            - run: 
                name: Make app.yaml file
                command: |
                  chmod +rwx app_yaml.sh
                  ./app_yaml.sh > app.yaml
            - run:
                name: Authorize gcloud
                command: |
                  echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json
                  gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
                  gcloud --quiet config set project ${GCP_PROJECT}
            - deploy:
                name: Deploy app to test
                command: |
                  cd ~/project
                  if [[ << parameters.env_name >> == "test" ]]; then
                    echo "Deploy app to test"
                    gcloud app deploy app.yaml -v test --no-promote
                  else
                    echo "Deploy app to production"
                    gcloud app deploy app.yaml
            - run:
                name: Remove files
                command: |
                  rm ${HOME}/gcp-key.json
                  rm app.yaml
    approve_for_prod_deploy:
        docker: 
            - image: circleci/node:13.4
        steps:
            - run: echo "Hold for approval"

workflows:
    build_test_deploy:
        jobs:
          - build_test
          - deploy:
                name: deploy_test
                env_name: test
                requires:
                  - build_test
          - approve_for_prod_deploy:
                type: approval
                requires:
                  - deploy_test
          - deploy:
                name: deploy_prod
                env_name: prod
                requires:
                  - approve_for_prod_deploy